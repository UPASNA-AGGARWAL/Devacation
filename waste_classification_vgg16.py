{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":497253,"sourceType":"datasetVersion","datasetId":233210}],"dockerImageVersionId":30043,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [markdown]\n# ### IMPORT LIBRARIES\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:50:45.275943Z\",\"iopub.execute_input\":\"2024-03-24T11:50:45.276278Z\",\"iopub.status.idle\":\"2024-03-24T11:50:51.182778Z\",\"shell.execute_reply.started\":\"2024-03-24T11:50:45.276248Z\",\"shell.execute_reply\":\"2024-03-24T11:50:51.181874Z\"}}\nimport pandas as pd \nimport numpy as np\nimport matplotlib.pyplot as plt \nimport skimage.io\nimport tensorflow \nimport tqdm\nimport glob\n\nfrom tqdm import tqdm \n\nfrom skimage.io import imread, imshow\n# from skimage.transform import resize\n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.applications.vgg16 import VGG16\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import InputLayer, Dense, Flatten, BatchNormalization, Dropout, Activation\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\nfrom tensorflow.keras.preprocessing.image import load_img, img_to_array\nfrom keras.utils.vis_utils import plot_model\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\n\n%matplotlib inline\n\n# %% [markdown]\n# ### IMPORT DATASET \n\n# %% [markdown]\n# > `TRAINING IMAGES`\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:21.577884Z\",\"iopub.execute_input\":\"2024-03-24T11:51:21.578239Z\",\"iopub.status.idle\":\"2024-03-24T11:51:22.000467Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:21.578208Z\",\"shell.execute_reply\":\"2024-03-24T11:51:21.999739Z\"}}\ntrain_o = glob.glob('../input/waste-classification-data/DATASET/TRAIN/O/*.jpg')\na = len(train_o)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:22.930888Z\",\"iopub.execute_input\":\"2024-03-24T11:51:22.931221Z\",\"iopub.status.idle\":\"2024-03-24T11:51:23.378983Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:22.931191Z\",\"shell.execute_reply\":\"2024-03-24T11:51:23.378029Z\"}}\ntrain_r = glob.glob('../input/waste-classification-data/DATASET/TRAIN/R/*.jpg')\nb = len(train_r)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:23.988552Z\",\"iopub.execute_input\":\"2024-03-24T11:51:23.988926Z\",\"iopub.status.idle\":\"2024-03-24T11:51:23.994178Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:23.988892Z\",\"shell.execute_reply\":\"2024-03-24T11:51:23.993106Z\"}}\n# Total training images \n\nprint(\"Nos of training samples: {}\".format(a+b))\n\n# %% [markdown]\n# > `DATA AUGMENTATION`\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:26.237752Z\",\"iopub.execute_input\":\"2024-03-24T11:51:26.238092Z\",\"iopub.status.idle\":\"2024-03-24T11:51:26.244674Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:26.238056Z\",\"shell.execute_reply\":\"2024-03-24T11:51:26.243644Z\"}}\ntrain_datagen = ImageDataGenerator(rescale = 1.0 / 255.0,\n                                   zoom_range = 0.4,\n                                   rotation_range = 10,\n                                   horizontal_flip = True,\n                                   vertical_flip = True,\n                                   validation_split = 0.2)\n\nvalid_datagen = ImageDataGenerator(rescale = 1.0 / 255.0,\n                                   validation_split = 0.2)\n\ntest_datagen  = ImageDataGenerator(rescale = 1.0 / 255.0)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:27.869840Z\",\"iopub.execute_input\":\"2024-03-24T11:51:27.870228Z\",\"iopub.status.idle\":\"2024-03-24T11:51:44.599732Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:27.870192Z\",\"shell.execute_reply\":\"2024-03-24T11:51:44.598724Z\"}}\ntrain_dataset  = train_datagen.flow_from_directory(directory = '../input/waste-classification-data/DATASET/TRAIN',\n                                                   target_size = (224,224),\n                                                   class_mode = 'binary',\n                                                   batch_size = 128, \n                                                   subset = 'training')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:44.601868Z\",\"iopub.execute_input\":\"2024-03-24T11:51:44.602266Z\",\"iopub.status.idle\":\"2024-03-24T11:51:48.573270Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:44.602224Z\",\"shell.execute_reply\":\"2024-03-24T11:51:48.572419Z\"}}\nvalid_dataset = valid_datagen.flow_from_directory(directory = '../input/waste-classification-data/DATASET/TRAIN',\n                                                  target_size = (224,224),\n                                                  class_mode = 'binary',\n                                                  batch_size = 128, \n                                                  subset = 'validation')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:48.574543Z\",\"iopub.execute_input\":\"2024-03-24T11:51:48.574828Z\",\"iopub.status.idle\":\"2024-03-24T11:51:48.581173Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:48.574800Z\",\"shell.execute_reply\":\"2024-03-24T11:51:48.580422Z\"}}\n# Class Indices \n\ntrain_dataset.class_indices\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:51:48.582295Z\",\"iopub.execute_input\":\"2024-03-24T11:51:48.582598Z\",\"iopub.status.idle\":\"2024-03-24T11:52:05.816509Z\",\"shell.execute_reply.started\":\"2024-03-24T11:51:48.582571Z\",\"shell.execute_reply\":\"2024-03-24T11:52:05.815503Z\"}}\n# Viewing Images\n\nfig, ax = plt.subplots(nrows = 1, ncols = 5, figsize = (20,20))\n\nfor i in tqdm(range(5)):\n    rand1 = np.random.randint(len(train_dataset))\n    rand2 = np.random.randint(128)\n    ax[i].imshow(train_dataset[rand1][0][rand2])\n    ax[i].axis('off')\n    label = train_dataset[rand1][1][rand2]\n    if label == 1:\n        ax[i].set_title('Recycle Waste')\n    else:\n        ax[i].set_title('Organic Waste')\n\n# %% [markdown]\n# ### MODEL BUILDING\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:05.819288Z\",\"iopub.execute_input\":\"2024-03-24T11:52:05.819641Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.623878Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:05.819609Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.623153Z\"}}\n# Defining Model\n\nbase_model = VGG16(input_shape=(224,224,3), \n                   include_top=False,\n                   weights=\"imagenet\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.625808Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.626193Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.631624Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.626155Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.630593Z\"}}\n# Freezing Layers \n\nfor layer in base_model.layers:\n    layer.trainable=False\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.632720Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.632978Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.653805Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.632952Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.652993Z\"}}\n# Summary\n\nbase_model.summary()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.655088Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.655386Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.860193Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.655344Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.859395Z\"}}\n# Defining Layers\n\nmodel=Sequential()\nmodel.add(base_model)\nmodel.add(Dropout(0.2))\nmodel.add(Flatten())\nmodel.add(BatchNormalization())\nmodel.add(Dense(1024,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(1024,kernel_initializer='he_uniform'))\nmodel.add(BatchNormalization())\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(1,activation='sigmoid'))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.861569Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.861959Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.872001Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.861922Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.870862Z\"}}\n# Summary\n\nmodel.summary()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.873303Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.873621Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.906646Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.873576Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.905906Z\"}}\n# Model Compile \n\nOPT    = tensorflow.keras.optimizers.Adam(lr=0.001)\n\nmodel.compile(loss='binary_crossentropy',\n              metrics=[tensorflow.keras.metrics.AUC(name = 'auc')],\n              optimizer=OPT)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.907768Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.908068Z\",\"iopub.status.idle\":\"2024-03-24T11:52:08.913831Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.908041Z\",\"shell.execute_reply\":\"2024-03-24T11:52:08.912765Z\"}}\n# Defining Callbacks\n\nfilepath = './model.h5'\n\nearlystopping = EarlyStopping(monitor = 'val_auc', \n                              mode = 'max' , \n                              patience = 5,\n                              verbose = 1)\n\ncheckpoint    = ModelCheckpoint(filepath, \n                                monitor = 'val_auc', \n                                mode='max', \n                                save_best_only=True, \n                                verbose = 1)\n\n\ncallback_list = [earlystopping, checkpoint]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:08.915013Z\",\"iopub.execute_input\":\"2024-03-24T11:52:08.915277Z\",\"iopub.status.idle\":\"2024-03-24T11:52:09.426706Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:08.915252Z\",\"shell.execute_reply\":\"2024-03-24T11:52:09.425814Z\"}}\nplot_model(model, to_file='model.png')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T11:52:09.428241Z\",\"iopub.execute_input\":\"2024-03-24T11:52:09.428587Z\",\"iopub.status.idle\":\"2024-03-24T12:16:56.427837Z\",\"shell.execute_reply.started\":\"2024-03-24T11:52:09.428554Z\",\"shell.execute_reply\":\"2024-03-24T12:16:56.426794Z\"}}\n# Model Fitting \n\nmodel_history=model.fit(train_dataset,\n                        validation_data=valid_dataset,\n                        epochs = 15,\n                        callbacks = callback_list,\n                        verbose = 1)\n\n# %% [markdown]\n# ### MODEL EVALUATION\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:16:56.429645Z\",\"iopub.execute_input\":\"2024-03-24T12:16:56.430032Z\",\"iopub.status.idle\":\"2024-03-24T12:16:56.597184Z\",\"shell.execute_reply.started\":\"2024-03-24T12:16:56.429992Z\",\"shell.execute_reply\":\"2024-03-24T12:16:56.596164Z\"}}\n# Summarize the model loss\n\nplt.plot(model_history.history['loss'])\nplt.plot(model_history.history['val_loss'])\nplt.title('Model Loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='upper left', bbox_to_anchor=(1,1))\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:16:56.598571Z\",\"iopub.execute_input\":\"2024-03-24T12:16:56.598994Z\",\"iopub.status.idle\":\"2024-03-24T12:16:56.758239Z\",\"shell.execute_reply.started\":\"2024-03-24T12:16:56.598950Z\",\"shell.execute_reply\":\"2024-03-24T12:16:56.757419Z\"}}\n# Summarize models auc\n\nplt.plot(model_history.history['auc'])\nplt.plot(model_history.history['val_auc'])\nplt.title('Model AUC')\nplt.ylabel('AUC')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Validation'], loc='upper left', bbox_to_anchor=(1,1))\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:16:56.759856Z\",\"iopub.execute_input\":\"2024-03-24T12:16:56.760266Z\",\"iopub.status.idle\":\"2024-03-24T12:16:57.591430Z\",\"shell.execute_reply.started\":\"2024-03-24T12:16:56.760226Z\",\"shell.execute_reply\":\"2024-03-24T12:16:57.590529Z\"}}\n# Test Data \ntest_data = test_datagen.flow_from_directory(directory = '../input/waste-classification-data/DATASET/TEST',\n                                             target_size = (224,224),\n                                             class_mode = 'binary',\n                                             batch_size = 128)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:16:57.593115Z\",\"iopub.execute_input\":\"2024-03-24T12:16:57.593515Z\",\"iopub.status.idle\":\"2024-03-24T12:17:15.589486Z\",\"shell.execute_reply.started\":\"2024-03-24T12:16:57.593474Z\",\"shell.execute_reply\":\"2024-03-24T12:17:15.588686Z\"}}\n# Evaluating Loss and AUC - Test Data \n\nmodel.evaluate(test_data)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:22:44.418196Z\",\"iopub.execute_input\":\"2024-03-24T12:22:44.418594Z\",\"iopub.status.idle\":\"2024-03-24T12:22:44.566002Z\",\"shell.execute_reply.started\":\"2024-03-24T12:22:44.418556Z\",\"shell.execute_reply\":\"2024-03-24T12:22:44.565256Z\"}}\n# Test Case:1 - ORGANIC\n\ndic = test_data.class_indices\nidc = {k:v for v,k in dic.items()}\n\nimg = load_img('../input/waste-classification-data/DATASET/TEST/O/O_12654.jpg', target_size=(224,224))\nimg = img_to_array(img)\nimg = img / 255\nimshow(img)\nplt.axis('off')\nimg = np.expand_dims(img,axis=0)\nanswer = model.predict_proba(img)\n\nif answer[0][0] > 0.5:\n    print(\"RECYCLABLE\")\nelse:\n    print(\"ORGANIC\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:23:36.447187Z\",\"iopub.execute_input\":\"2024-03-24T12:23:36.447565Z\",\"iopub.status.idle\":\"2024-03-24T12:23:36.597271Z\",\"shell.execute_reply.started\":\"2024-03-24T12:23:36.447530Z\",\"shell.execute_reply\":\"2024-03-24T12:23:36.596405Z\"}}\n# Test Case:2 - RECYCLE\n\ndic = test_data.class_indices\nidc = {k:v for v,k in dic.items()}\n\nimg = load_img('../input/waste-classification-data/DATASET/TEST/R/R_10011.jpg', target_size=(224,224))\nimg = img_to_array(img)\nimg = img / 255\nimshow(img)\nplt.axis('off')\nimg = np.expand_dims(img,axis=0)\nanswer = model.predict_proba(img)\n\nif answer[0][0] > 0.5:\n    print(\"RECYCLABLE\")\nelse:\n    print(\"ORGANIC\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-03-24T12:25:45.646798Z\",\"iopub.execute_input\":\"2024-03-24T12:25:45.647172Z\",\"iopub.status.idle\":\"2024-03-24T12:25:45.652839Z\",\"shell.execute_reply.started\":\"2024-03-24T12:25:45.647135Z\",\"shell.execute_reply\":\"2024-03-24T12:25:45.652077Z\"}}\ntrain_dataset.class_indices\n\n# %% [markdown]\n# ### CONCLUSION\n\n# %% [markdown]\n# > `1. We were able to classify images properly having accuracy of 97.00% in training dataset.`\n# \n# > `2. We acheived an accuracy of 95.60% on validation data and 94.98% accuracy on test accuracy.`","metadata":{"_uuid":"a0d4e795-e948-47e4-91cd-a84d8282ecea","_cell_guid":"3ba13d6d-cb22-455e-9466-0458c429bfdd","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}